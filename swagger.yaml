swagger: '2.0'
info:
  title: Holiday-Extras API
  description: Description of the tech test API
  version: "1.0.0"
# the domain of the service
host: holiday-extras-stage.herokuapp.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /user:
    get:
      summary: Get all users
      description: Returns all users in the Db
      produces:
        - application/json
      responses:
        200:
          description: Users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'  
    put:
      summary: Update a user
      description: 'Updates a User'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: The User object to be updated
          required: true
          schema: 
            $ref: '#/definitions/User'
      responses:
        202:
          description: A User
          schema:
            type: object
            items:
              $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add a user
      description: 'Creates a User'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: The User object to be created
          required: true
          schema: 
            $ref: '#/definitions/User'
      responses:
        201:
          description: The user's id
          schema:
            type: number
            format: int64
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'   
                 
  /user/{userId}:
    get:
      summary: Find User by Id
      description: 'Returns a User'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: The id of the user
          required: true
          type: number
          format: int64
      responses:
        200:
          description: A User
          schema:
            type: object
            items:
              $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a User by Id
      description: 'Deletes a User'
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: The id of the user
          required: true
          type: number
          format: int64
      responses:
        202:
          description: Deleted user
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  User:
    required: 
      - email
      - familyName
      - givenName
    properties:
      userId:
        type: string
        description: Unique identifier representing a specific User.
      email:
        type: string
        description: a User's email.
      familyName:
        type: string
        description: a User's family name.
      givenName:
        type: string
        description: a User's given name.
      created:
        type: string
        description: ISO representation of the date/time the User was added.
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
